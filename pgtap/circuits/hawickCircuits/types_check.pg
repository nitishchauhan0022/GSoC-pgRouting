BEGIN;

SELECT CASE WHEN NOT min_version('3.4.0') THEN plan(1) ELSE plan(5) END;

CREATE OR REPLACE FUNCTION types_check()
RETURNS SETOF TEXT AS
$BODY$
BEGIN

  IF NOT min_version('3.4.0') THEN
    RETURN QUERY
    SELECT skip(1, 'Function is new on 3.4.0');
    RETURN;
  END IF;

RETURN QUERY
SELECT has_function('pgr_hawickcircuits');
RETURN QUERY
SELECT has_function('pgr_hawickcircuits', ARRAY['text']);
RETURN QUERY
SELECT function_returns('pgr_hawickcircuits', ARRAY['text'],'setof record');

RETURN QUERY
SELECT set_eq(
  $$SELECT  proargnames from pg_proc where proname = 'pgr_hawickcircuits'$$,
  $$VALUES
  ('{"","seq","path_id","path_seq","start_vid","end_vid","node","edge","cost","agg_cost"}'::TEXT[])
  $$);

RETURN QUERY
SELECT set_eq(
  $$SELECT  proallargtypes from pg_proc where proname = 'pgr_hawickcircuits'$$,
  $$VALUES
  ('{25,23,23,23,20,20,20,20,701,701}'::OID[])
  $$);

END;
$BODY$
LANGUAGE plpgsql;

SELECT types_check();

SELECT * FROM finish();
ROLLBACK;

